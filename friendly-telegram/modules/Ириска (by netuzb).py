__version__ = (1, 0, 1)
# meta developer: @netuzb
# –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã –∏ —É–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –¢–µ–º—É—Ä–æ–º –≠—Ä–∫–∏–Ω–æ–≤—ã–º(@netuzb).
# –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –≤—ã –±—É–¥–µ—Ç–µ –Ω–µ—Å—Ç–∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –ª—é–±—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –≤–Ω–µ—Å–µ–Ω–Ω—ã–µ –≤ —ç—Ç–æ—Ç –º–æ–¥—É–ª—å. 

from .. import loader, utils 
from telethon import events 
from telethon.errors.rpcerrorlist import YouBlockedUserError 
from asyncio.exceptions import TimeoutError 
 
def register(cb): 
    cb(iriskaMod()) 
 
class iriskaMod(loader.Module): 
    """ –ò—Ä–∏—Å–∫–∞: –°–æ–∑–¥–∞—Ç–µ–ª—å: @netuzb

üá∫üáø ‚Ä¢ –ê–¥–º–∏–Ω —É–∑–±–µ–∫!)
üá∑üá∫ ‚Ä¢ –ú–æ–¥—É–ª—å –¥–æ–ª–∂–µ–Ω –±—ã–ª –Ω–∞–ø–∏—Å–∞–Ω –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º —è–∑—ã–∫–µ. –ù–æ –ò—Ä–∏—Å–∫–∞ –Ω–µ –≥–æ–≤–æ—Ä–∏—Ç –ø–æ-—É–∑–±–µ–∫—Å–∫–∏. –ò–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É –º–æ–¥—É–ª—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.""" 
    strings = {
               "name": "–ò—Ä–∏—Å–∫–∞ #umodules",
               "eshe": "<b>ü§® ‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!</b>",
               "chto": "<b>üòë ‚Ä¢ –î–∞–≤–∞–π —Ç–æ–ª—å–∫–æ —Å —Ç–µ–∫—Å—Ç–æ–º?</b>",
               "oshibka": "<b>üòê ‚Ä¢ –§–∏–≥–∞ —Å–µ, –æ—à–∏–±–∫–∞!</b>",
               "udali": "<b>‚òπÔ∏è ‚Ä¢ –¢—ã –∑–∞–±—ã–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å! - </b>@iris_cm_bot"} 

    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        self._me = await client.get_me()
 
    async def –∏–Ω—Ñ–∞cmd(self, message): 
        """üòö ‚Ä¢ –í—ã–¥–∞–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∏–Ω—Ñ—ã""" 
        try:
            text = utils.get_args_raw(message) 
            reply = await message.get_reply_message() 
            chat = "@iris_cm_bot" 
            if not text and not reply: 
                await message.edit(self.strings("chto", message))
                return 
            if text: 
                async with message.client.conversation(chat) as conv: 
                    try: 
                        response = conv.wait_event(events.NewMessage(incoming=True, from_users=707693258)) 
                        await message.client.send_message(chat, "!–ò–Ω—Ñ–∞ " + text) 
                        response = await response 
                    except YouBlockedUserError: 
                        await message.reply(self.strings("udali", message))
                        return 
                    if not response.text: 
                        await message.edit(self.strings("eshe", message))
                        return
                    await self.client.send_message(message.to_id, response.text)
                    await self.client.delete_dialog(chat) 
        except TimeoutError: 
            return await message.edit(self.strings("oshibka", message))
            
# -----------------------------------------------------------#
# The creator of this module is @netuzb 
# -----------------------------------------------------------#

    async def –≤—ã–±–µ—Ä–∏cmd(self, message): 
        """ü§î ‚Ä¢ –í—ã–±–∏—Ä–∞–µ—Ç –º–µ–∂–¥–∏ <text> –∏–ª–∏ <text>""" 
        try:
            text = utils.get_args_raw(message) 
            reply = await message.get_reply_message() 
            chat = "@iris_cm_bot" 
            if not text and not reply: 
                await message.edit(self.strings("chto", message))
                return 
            if text: 
                async with message.client.conversation(chat) as conv: 
                    try: 
                        response = conv.wait_event(events.NewMessage(incoming=True, from_users=707693258)) 
                        await message.client.send_message(chat, "!–í—ã–±–µ—Ä–∏ " + text) 
                        response = await response 
                    except YouBlockedUserError: 
                        await message.reply(self.strings("udali", message))
                        return 
                    if not response.text: 
                        await message.edit(self.strings("eshe", message))
                        return
                    await self.client.send_message(message.to_id, response.text)
                    await self.client.delete_dialog(chat) 
        except TimeoutError: 
            return await message.edit(self.strings("oshibka", message))

# -----------------------------------------------------------#
# The creator of this module is @netuzb 
# -----------------------------------------------------------#

    async def –¥–∞–Ω–µ—Çcmd(self, message): 
        """ü§® ‚Ä¢ –í—ã–±–∏—Ä–∞–µ—Ç <–¥–∞> –∏–ª–∏ <–Ω–µ—Ç>""" 
        try:
            text = utils.get_args_raw(message) 
            reply = await message.get_reply_message() 
            chat = "@iris_cm_bot" 
            if not text and not reply: 
                await message.edit(self.strings("chto", message))
                return 
            if text: 
                async with message.client.conversation(chat) as conv: 
                    try: 
                        response = conv.wait_event(events.NewMessage(incoming=True, from_users=707693258)) 
                        await message.client.send_message(chat, "!–î–∞–Ω–µ—Ç " + text) 
                        response = await response 
                    except YouBlockedUserError: 
                        await message.reply(self.strings("udali", message))
                        return 
                    if not response.text: 
                        await message.edit(self.strings("eshe", message))
                        return
                    await self.client.send_message(message.to_id, response.text)
                    await self.client.delete_dialog(chat) 
        except TimeoutError: 
            return await message.edit(self.strings("oshibka", message))

# -----------------------------------------------------------#
# The creator of this module is @netuzb 
# -----------------------------------------------------------#

    async def –ø–æ–≥–æ–¥–∞cmd(self, message): 
        """ü•∂ ‚Ä¢ –í—ã–¥–∞–µ—Ç –ø–æ–≥–æ–¥—É –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥""" 
        try:
            text = utils.get_args_raw(message) 
            reply = await message.get_reply_message() 
            chat = "@iris_cm_bot" 
            if not text and not reply: 
                await message.edit(self.strings("chto", message))
                return 
            if text: 
                async with message.client.conversation(chat) as conv: 
                    try: 
                        response = conv.wait_event(events.NewMessage(incoming=True, from_users=707693258)) 
                        await message.client.send_message(chat, "!–ü–æ–≥–æ–¥–∞ " + text) and await message.delete()
                        response = await response 
                    except YouBlockedUserError: 
                        await message.reply(self.strings("udali", message))
                        return 
                    if not response.text: 
                        await message.edit(self.strings("eshe", message))
                        return
                    await self.client.send_message(message.to_id, response.text)
                    await self.client.delete_dialog(chat) 
        except TimeoutError: 
            return await message.edit(self.strings("oshibka", message))

# -----------------------------------------------------------#
# The creator of this module is @netuzb 
# -----------------------------------------------------------#

    async def —Ä–∞–Ω–¥–æ–ºcmd(self, message): 
        """ü§ì ‚Ä¢ –í—ã–ø–∞–¥–∞–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω–∞—è —Ü–∏—Ñ—Ä–∞ <—Ü–∏—Ñ—Ä –¥–æ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏>""" 
        try:
            text = utils.get_args_raw(message) 
            reply = await message.get_reply_message() 
            chat = "@iris_cm_bot" 
            if not text and not reply: 
                await message.edit(self.strings("chto", message))
                return 
            if text: 
                async with message.client.conversation(chat) as conv: 
                    try: 
                        response = conv.wait_event(events.NewMessage(incoming=True, from_users=707693258)) 
                        await message.client.send_message(chat, "!–†–∞–Ω–¥–æ–º " + text) 
                        response = await response 
                    except YouBlockedUserError: 
                        await message.reply(self.strings("udali", message))
                        return 
                    if not response.text: 
                        await message.edit(self.strings("eshe", message))
                        return
                    await self.client.send_message(message.to_id, response.text)
                    await self.client.delete_dialog(chat) 
        except TimeoutError: 
            return await message.edit(self.strings("oshibka", message))
